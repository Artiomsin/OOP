import Foundation


let cli = CLIHandler()
cli.start()
/*
class SimpleEditor {
    var document: [[Character]]
    var cursorX: Int
    var cursorY: Int
    var isRunning: Bool
    
    init(rows: Int, columns: Int) {
        self.document = Array(repeating: Array(repeating: "_", count: columns), count: rows)
        self.cursorX = 0
        self.cursorY = 0
        self.isRunning = true
    }
    
    // –ó–∞–ø—É—Å–∫ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
    func start() {
        print("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞:")
        guard let rowsInput = readLine(), let rows = Int(rowsInput), rows > 0 else {
            print("–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫.")
            return
        }
        
        print("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞:")
        guard let columnsInput = readLine(), let columns = Int(columnsInput), columns > 0 else {
            print("–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤.")
            return
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ —Ä–∞–∑–º–µ—Ä–∞–º–∏
        self.document = Array(repeating: Array(repeating: "_", count: columns), count: rows)
        self.cursorX = 0
        self.cursorY = 0
        self.isRunning = true
        
        while isRunning {
            printDocument()
            handleInput()
        }
    }
    
    func printDocument() {
        // –í–º–µ—Å—Ç–æ –æ—á–∏—â–µ–Ω–∏—è —ç–∫—Ä–∞–Ω–∞, –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
        // –ü–µ—á–∞—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏, —á—Ç–æ —É—Å–∫–æ—Ä—è–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å

        for (y, row) in document.enumerated() {
            if y == cursorY {
                var rowWithCursor = row
                rowWithCursor[cursorX] = "|" // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—É—Ä—Å–æ—Ä
                print(String(rowWithCursor))
            } else {
                print(String(row)) // –ü–µ—á–∞—Ç—å –æ–±—ã—á–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
            }
        }
        
        // –ü–µ—á–∞—Ç–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª–æ–∂–µ–Ω–∏–∏ –∫—É—Ä—Å–æ—Ä–∞
        print("\n–ö—É—Ä—Å–æ—Ä –≤ (\(cursorX), \(cursorY))")
        print("–ò—Å–ø–æ–ª—å–∑—É–π 8 (–≤–≤–µ—Ä—Ö), 2 (–≤–Ω–∏–∑), 4 (–≤–ª–µ–≤–æ), 6 (–≤–ø—Ä–∞–≤–æ), d (—É–¥–∞–ª–∏—Ç—å), –ª—é–±–æ–π —Å–∏–º–≤–æ–ª - –¥–ª—è –≤–≤–æ–¥–∞. 'q' - –≤—ã—Ö–æ–¥")
    }
    
    func handleInput() {
        if let input = readLine(strippingNewline: true) {
            switch input {
            case "8": if cursorY > 0 { cursorY -= 1 } // –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –≤–≤–µ—Ä—Ö
            case "2": if cursorY < document.count - 1 { cursorY += 1 } // –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –≤–Ω–∏–∑
            case "4": if cursorX > 0 { cursorX -= 1 } // –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –≤–ª–µ–≤–æ
            case "6": if cursorX < document[cursorY].count - 1 { cursorX += 1 } // –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –≤–ø—Ä–∞–≤–æ
            case "d":
                document[cursorY][cursorX] = "_" // –£–¥–∞–ª–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–∞, –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ "_"
            case "q":
                isRunning = false // –í—ã—Ö–æ–¥ –∏–∑ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
            default:
                if input.count == 1 { // –í–≤–æ–¥ –æ–¥–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞
                    document[cursorY][cursorX] = Character(input)
                }
            }
        }
    }
}

// –ó–∞–ø—É—Å–∫ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
let editor = SimpleEditor(rows: 7, columns: 16)
editor.start()
*/


/*
 üìÇ SwiftTextEditor
 ‚îÇ
 ‚îú‚îÄ‚îÄ üìÇ Models
 ‚îÇ   ‚îú‚îÄ‚îÄ Document.swift
 ‚îÇ   ‚îú‚îÄ‚îÄ PlainTextDocument.swift
 ‚îÇ   ‚îú‚îÄ‚îÄ MarkdownDocument.swift
 ‚îÇ   ‚îú‚îÄ‚îÄ RichTextDocument.swift
 ‚îÇ   ‚îú‚îÄ‚îÄ User.swift
 ‚îÇ   ‚îî‚îÄ‚îÄ RoleManager.swift
 ‚îÇ
 ‚îú‚îÄ‚îÄ üìÇ Patterns
 ‚îÇ   ‚îú‚îÄ‚îÄ FactoryPattern.swift
 ‚îÇ   ‚îú‚îÄ‚îÄ AdapterPattern.swift
 ‚îÇ   ‚îú‚îÄ‚îÄ DecoratorPattern.swift
 ‚îÇ   ‚îú‚îÄ‚îÄ CommandPattern.swift
 ‚îÇ   ‚îú‚îÄ‚îÄ StrategyPattern.swift
 ‚îÇ   ‚îú‚îÄ‚îÄ ObserverPattern.swift
 ‚îÇ   ‚îî‚îÄ‚îÄ SingletonPattern.swift
 ‚îÇ
 ‚îú‚îÄ‚îÄ üìÇ Storage
 ‚îÇ   ‚îú‚îÄ‚îÄ LocalStorage.swift
 ‚îÇ   ‚îî‚îÄ‚îÄ CloudStorage.swift
 ‚îÇ
 ‚îú‚îÄ‚îÄ üìÇ Commands
 ‚îÇ   ‚îú‚îÄ‚îÄ InsertTextCommand.swift
 ‚îÇ   ‚îú‚îÄ‚îÄ DeleteTextCommand.swift
 ‚îÇ   ‚îî‚îÄ‚îÄ UndoRedoManager.swift
 ‚îÇ
 ‚îú‚îÄ‚îÄ üìÇ CLI
 ‚îÇ   ‚îî‚îÄ‚îÄ CLIHandler.swift
 ‚îÇ
 ‚îî‚îÄ‚îÄ main.swift
 */

/*
 –ü–ª–∞–Ω –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π —Ä–∞–±–æ—Ç—ã ‚Ññ2 ("OOP Patterns")
 –ú—ã –±—É–¥–µ–º –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª, –∏—Å–ø–æ–ª—å–∑—É—è –ø—Ä–∏–Ω—Ü–∏–ø—ã –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è (–û–û–ü) –∏ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.

 üìå –≠—Ç–∞–ø 1: –ë–∞–∑–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏
 üîπ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:
 ‚úÖ –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∞—Å—Å–æ–≤ Document, PlainTextDocument, MarkdownDocument, RichTextDocument.
 ‚úÖ –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∞–±—Ä–∏—á–Ω–æ–≥–æ –ø–∞—Ç—Ç–µ—Ä–Ω–∞ (Factory Pattern) –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.
 ‚úÖ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è, –æ—Ç–∫—Ä—ã—Ç–∏—è, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.
 ‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ñ–æ—Ä–º–∞—Ç–æ–≤: TXT, JSON, XML.
 ‚úÖ CLI (Command Line Interface) –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
 ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ –∑–∞–¥–∞–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.

 üìå –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã:
 ‚úî Factory Method (–¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤).

 üìå –≠—Ç–∞–ø 2: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
 üîπ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:
 ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞, —É–¥–∞–ª–µ–Ω–∏–µ, –∏–∑–º–µ–Ω–µ–Ω–∏–µ.
 ‚úÖ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ (–∂–∏—Ä–Ω—ã–π, –∫—É—Ä—Å–∏–≤, –ø–æ–¥—á—ë—Ä–∫–Ω—É—Ç—ã–π).
 ‚úÖ –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è, –≤—ã—Ä–µ–∑–∞–Ω–∏—è, –≤—Å—Ç–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞.
 ‚úÖ –ü–æ–∏—Å–∫ —Ç–µ–∫—Å—Ç–∞ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ.

 üìå –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã:
 ‚úî Decorator Pattern (–¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞).

 üìå –≠—Ç–∞–ø 3: –°–∏—Å—Ç–µ–º–∞ "–û—Ç–º–µ–Ω–∏—Ç—å / –ü–æ–≤—Ç–æ—Ä–∏—Ç—å" (Undo/Redo)
 üîπ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:
 ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–æ–∫—É–º–µ–Ω—Ç–∞.
 ‚úÖ –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ "–û—Ç–º–µ–Ω–∞" (Undo) / "–ü–æ–≤—Ç–æ—Ä–∏—Ç—å" (Redo).

 üìå –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã:
 ‚úî Command Pattern (–¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è).

 üìå –≠—Ç–∞–ø 4: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞
 üîπ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:
 ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (Viewer, Editor, Admin).
 ‚úÖ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏—Ö —Ä–æ–ª–∏.
 ‚úÖ –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö.

 üìå –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã:
 ‚úî Strategy Pattern (—Ä–∞–∑–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –¥–æ—Å—Ç—É–ø–∞).
 ‚úî Observer Pattern (—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö).

 üìå –≠—Ç–∞–ø 5: –•—Ä–∞–Ω–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ —ç–∫—Å–ø–æ—Ä—Ç –≤ —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
 üîπ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:
 ‚úÖ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã, –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –æ–±–ª–∞–∫–æ.
 ‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –≤ —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã (TXT, JSON, XML).
 ‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –º–µ–∂–¥—É —Ñ–æ—Ä–º–∞—Ç–∞–º–∏ (Markdown <-> PlainText <-> RichText).

 üìå –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã:
 ‚úî Adapter Pattern (–¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–∞–∑–Ω—ã–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏).
 ‚úî Strategy Pattern (–¥–ª—è –≤—ã–±–æ—Ä–∞ –º–µ—Å—Ç–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è).

 üìå –≠—Ç–∞–ø 6: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è
 üîπ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:
 ‚úÖ –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–º—ã, —à—Ä–∏—Ñ—Ç–∞, —Ä–∞–∑–º–µ—Ä–∞ —Ç–µ–∫—Å—Ç–∞.
 ‚úÖ –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞.

 üìå –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã:
 ‚úî Singleton Pattern (–¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫).

 üìå –§–∏–Ω–∞–ª—å–Ω—ã–π —ç—Ç–∞–ø: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ—Ç—á—ë—Ç–∞
 ‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã (unit-—Ç–µ—Å—Ç—ã).
 ‚úÖ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ UML-–¥–∏–∞–≥—Ä–∞–º–º—ã.
 ‚úÖ –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ README.md (–æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞, –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏).
 ‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–¥–∞ –≤ GitHub.

 üéØ –ò—Ç–æ–≥:
 üîπ –ü–æ–ª—É—á–∏—Ç—Å—è –≥–∏–±–∫–∏–π –∏ —É–¥–æ–±–Ω—ã–π –∫–æ–Ω—Å–æ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é.
 üîπ –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –û–û–ü, —á—Ç–æ –æ–±–µ—Å–ø–µ—á–∏—Ç –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å –∫–æ–¥–∞.
 üîπ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –ø–æ—ç—Ç–∞–ø–Ω–æ, —É–ø—Ä–æ—â–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.

 –ö–∞–∫ —Ç–µ–±–µ —Ç–∞–∫–æ–π –ø–ª–∞–Ω? üòéüöÄ
 */
